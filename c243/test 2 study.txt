bubblesort
9 8 7 6 5 4 3 2 1

8 7 6 5 4 3 2 1 9

7 6 5 4 3 2 1 8 9

selectionsort
9 8 7 6 5 4 3 2 1

1 9 8 7 6 5 4 3 2

1 2 9 8 7 6 5 4 3

insertionsort
9 8 7 6 5 4 3 2 1

8 9 7 6 5 4 3 2 1

7 8 9 6 5 4 3 2 1

quicksort(one pass)
1 12 5 26 7 14 3 7 [10]->

1 7 5 26 7 14 3 12 [10]->

1 7 5 3 7 [10] 26 12 14

shellsort(one pass)
h=3
1 12 5 26 7 14 3 7 10

1 12 5
       26 7 14
               3 7 10

1 7 5 3 7 10 26 12 14

radix exchange(one pass)

0 1 0
0 0 0
1 0 1
0 0 1
1 1 1
0 1 1
1 0 0
1 1 0 

0 1 0
0 0 0
0 1 1
0 0 1
1 1 1
1 0 1
1 0 0
1 1 0 

straight radix(one pass)
0 1 0
0 0 0
1 0 0
1 1 0 
1 0 1
0 0 1
1 1 1
0 1 1

bottom-up mergesort
9 8 7 6 5 4 3 2 1 0

8 9 6 7 4 5 2 3 0 1

6 7 8 9 2 3 4 5 0 1

2 3 4 5 6 7 8 9 0 1

traverse linked list

int list_node::find_matches(int k){
  int matches;
  list_node *p = this;
  while(p){
    if (p->datum == k){
      matches++;
    }
    p=p->next;
  } 
  return matches;
}

















 